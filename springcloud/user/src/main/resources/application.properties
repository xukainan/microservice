server.port=8070
# 写成大写，不然注册到eureka是大写，实际上是小写，调用时容易搞混
spring.application.name=EUREKA-CLIENT-CONSUMER-USER

#eureka
##点进去左下角会显示ip
eureka.instance.prefer-ip-address=true
##eureka status不显示主机名，显示instance-id ，唯一，集群内不可重复
eureka.instance.instance-id=EUREKA-CLIENT-CONSUMER-USER
##向eureka server发送心跳的间隔时间
eureka.instance.lease-renewal-interval-in-seconds=1
##表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则将移除该instance
eureka.instance.lease-expiration-duration-in-seconds=2
## 单机
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
## 集群
##eureka.client.service-url.defaultZone=http://local.plan.fang.com:8761/eureka/,http://local.dsp.fang.com:8762/eureka/
#
##项目配置
#thirdserice-order=http://EUREKA-CLIENT-PRODUCER-ORDER

#feign日志
logging.level.top.uaian.cloud.OrderService=debug
#feign中直接使用hystrix
feign.hystrix.enabled=true
#stream 整合bus
#spring.rabbitmq.host=10.24.132.53
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=kaipantest_admin
#spring.rabbitmq.password=kaipantest_admin5442
#spring.rabbitmq.virtual-host=kaipantest
#stream 消费者
spring.cloud.stream.binders.defaultRabbit.type=rabbit
spring.cloud.stream.binders.defaultRabbit.environment.spring.rabbitmq.host=10.24.132.53
spring.cloud.stream.binders.defaultRabbit.environment.spring.rabbitmq.port=5672
spring.cloud.stream.binders.defaultRabbit.environment.spring.rabbitmq.username=kaipantest_admin
spring.cloud.stream.binders.defaultRabbit.environment.spring.rabbitmq.password=kaipantest_admin5442
spring.cloud.stream.binders.defaultRabbit.environment.spring.rabbitmq.virtual-host=kaipantest
#exchange名称
spring.cloud.stream.bindings.intput.destination=BB
#消息类型 文本设置成text/plain
spring.cloud.stream.bindings.intput.content-type=application/json
#设置绑定的消息服务的具体设置
spring.cloud.stream.bindings.intput.binder=defaultRabbit
#解决了重复消费的问题，同一条消息不同组可以重复消费，同一个组只能消费一次
#解决了持久化问题，配置了组，重启时会自动消费exchange中未消费的消息
spring.cloud.stream.bindings.intput.group=defaultGroup

#sleuth
logging.level.root=INFO
logging.level.org.springframework.web.servlet.DispatcherServlet=DEBUG
logging.level.org.springframework.cloud.sleuth=DEBUG
#zipkin
spring.zipkin.base-url=http://localhost:9411/
spring.zipkin.service.name=sleuth-cart